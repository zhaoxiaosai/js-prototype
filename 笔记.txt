为什么要使用闭包?
答:为了实现面向对象编程中的封装，属性和方法都封装到对象中，为了安全，用户不可以直接操作属性，必须通过对象提供的统一方法（接口）进行访问

getValue()--闭包函数

setValue()
------------------------------------------
js中对象分类:
1.Function类型对象
 prototype原型对象
 __proto__隐式对象--指向构造器的prototype

2.Object类型对象
  __proto__ 指向构造器的prototype
---------------------------------
今天讲:
Object类型对象的创建:
创建方式:
1.var 对象名=new Object();
  var 对象名={};

2.使用构造器函数创建(工厂模式、混合模式)

--------------------------------------------
js中对象的概念:对象是无序的属性值对象。

-------------------------------------------
js设计模式:工厂模式、原型模式、混合模式
1.未使用工厂模式创建对象
  问题:代码冗余
       方法无法共享
       没有new

2.使用工厂模式创建对象--创建对象的过程封装函数，反复调用
  问题:没有new
       方法依然无法共享

3.改进版的工厂模式 new
  问题:方法无法共享

4.混合模式:
  预备知识:
   所有函数包括构造器函数都有一个原型属性prototype，凡是放到原型属性上的属性和方法，所有通过这个构造器函数创建的对象都可以实现共享


  __proto__隐秘属性，始终指向当前对象的构造器函数的原型prototype

我们发现:同一个构造器创建的对象，属性和方法完全相同，只有属性的值不同所以:
  工厂模式创建对象的属性
  原型模式创建对象的方法--实现共享




















